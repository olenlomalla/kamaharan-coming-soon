# This is an auto generated file. DO NOT EDIT
type User @model @auth(rules: [{allow: owner}]) {
  id: ID!
  email: String!
  name: String!
  type: UserType!
  profile: UserProfile
  preferences: UserPreferences
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

type UserProfile @model @auth(rules: [{allow: owner}]) {
  id: ID!
  userId: ID! @index
  avatar: String
  bio: String
  location: Location
  phoneNumber: String
}

type UserPreferences @model @auth(rules: [{allow: owner}]) {
  id: ID!
  userId: ID! @index
  emailNotifications: Boolean
  pushNotifications: Boolean
  categories: [String]
}

type Business @model @auth(rules: [
  {allow: owner},
  {allow: public, operations: [read]}
]) {
  id: ID!
  name: String!
  description: String!
  categories: [Category] @hasMany
  location: Location!
  contact: Contact!
  operatingHours: [OperatingHours]!
  media: [Media]
  services: [Service] @hasMany
  reviews: [Review] @hasMany
  analytics: Analytics
  subscription: Subscription
  owner: String
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

type Category @model @auth(rules: [{allow: public, operations: [read]}]) {
  id: ID!
  name: String!
  description: String
  icon: String
  parentId: ID
  businesses: [Business] @hasMany
}

type Service @model @auth(rules: [
  {allow: owner},
  {allow: public, operations: [read]}
]) {
  id: ID!
  businessId: ID! @index
  name: String!
  description: String!
  price: Float
  duration: Int
  availability: [Availability]
  category: Category @belongsTo
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

type Review @model @auth(rules: [
  {allow: owner},
  {allow: public, operations: [read]}
]) {
  id: ID!
  businessId: ID! @index
  userId: ID! @index
  rating: Int!
  content: String
  media: [Media]
  response: ReviewResponse
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

type ReviewResponse @model @auth(rules: [
  {allow: owner},
  {allow: public, operations: [read]}
]) {
  id: ID!
  reviewId: ID! @index
  content: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime
}

type Location {
  address: String!
  city: String!
  state: String!
  postalCode: String!
  country: String!
  coordinates: Coordinates
}

type Coordinates {
  latitude: Float!
  longitude: Float!
}

type Contact {
  email: String!
  phone: String
  website: String
}

type OperatingHours {
  day: Int!
  open: String!
  close: String!
  isClosed: Boolean
}

type Media {
  url: String!
  type: MediaType!
  caption: String
}

type Analytics {
  views: Int!
  bookings: Int!
  averageRating: Float
}

type Subscription {
  plan: SubscriptionPlan!
  startDate: AWSDateTime!
  endDate: AWSDateTime
  status: SubscriptionStatus!
}

type Availability {
  day: Int!
  startTime: String!
  endTime: String!
  slots: Int!
}

enum UserType {
  CUSTOMER
  BUSINESS_OWNER
  ADMIN
}

enum MediaType {
  IMAGE
  VIDEO
}

enum SubscriptionPlan {
  FREE
  BASIC
  PREMIUM
  ENTERPRISE
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  PENDING
  CANCELLED
}